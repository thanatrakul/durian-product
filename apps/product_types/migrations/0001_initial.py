# Generated by Django 3.2.13 on 2022-06-10 11:04

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import livefield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SupportSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supportsale_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 14}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supportsale_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Support Sale',
                'verbose_name_plural': 'Support Sales',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='SimulationTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, verbose_name='Time Limit')),
                ('time_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=2, verbose_name='Time Limit Unit')),
                ('pause_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Pause Limit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulationtest_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 7}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulationtest_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Simulation Test',
                'verbose_name_plural': 'Simulation Tests',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Width')),
                ('width_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Width Unit')),
                ('length', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Length')),
                ('length_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Length Unit')),
                ('height', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Heigth')),
                ('height_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Height Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 10}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packaging_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Packaging',
                'verbose_name_plural': 'Packaging',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gift_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 15}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gift_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Gift',
                'verbose_name_plural': 'Gifts',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='FacebookPrivateGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facebookprivategroup_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 13}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facebookprivategroup_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Facebook Private Group',
                'verbose_name_plural': 'Facebook Private Groups',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ExternalExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Time Limit')),
                ('time_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=2, verbose_name='Time Limit Unit')),
                ('pause_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Pause Limit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalexam_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 12}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalexam_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'External Exam',
                'verbose_name_plural': 'External Exams',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ExternalCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalcourse_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 11}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalcourse_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'External Course',
                'verbose_name_plural': 'External Courses',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='EduGadgetBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadgetbundle_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 6}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadgetbundle_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'EduGadget Bundle',
                'verbose_name_plural': 'EduGadget Bundles',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='EduGadget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadget_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 5}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadget_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'EduGadget',
                'verbose_name_plural': 'EduGadgets',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='EDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edocument_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 8}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edocument_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'EDocument',
                'verbose_name_plural': 'EDocuments',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Time Limit')),
                ('time_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=2, verbose_name='time Limit Unit')),
                ('pause_limit', models.PositiveIntegerField(default=0, verbose_name='Time Limit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseservice_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 4}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseservice_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Service',
                'verbose_name_plural': 'Course Services',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseEduGadget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseedugadget_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 9}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseedugadget_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course EdugGadget',
                'verbose_name_plural': 'Course EdugGadgets',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebundle_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 2}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebundle_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Bundle',
                'verbose_name_plural': 'Course Bundles',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=255, unique=True, verbose_name='ISBN')),
                ('number_of_page', models.PositiveSmallIntegerField(default=0, verbose_name='Number of Page')),
                ('width', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Width')),
                ('width_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Width Unit')),
                ('length', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Length')),
                ('length_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Length Unit')),
                ('height', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Height')),
                ('height_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Height Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebook_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 3}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebook_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Book',
                'verbose_name_plural': 'Course Books',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('product', models.OneToOneField(limit_choices_to={'product_type': 1}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ('pk',),
            },
        ),
    ]
