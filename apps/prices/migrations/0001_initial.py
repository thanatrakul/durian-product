# Generated by Django 3.2.13 on 2022-06-10 11:04

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import livefield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product_groups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Price Code')),
                ('name', models.CharField(max_length=255, verbose_name='Price Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('price_type', models.PositiveSmallIntegerField(choices=[(1, 'Full Payment'), (2, 'Deposit')], default=1, verbose_name='Price Type')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('price_status', models.PositiveSmallIntegerField(choices=[(1, 'Draft'), (2, 'Published'), (3, 'Suppressed'), (4, 'Hideden')], default=1, verbose_name='Price status')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='PriceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=5, verbose_name='Quantity')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priceproduct_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.price', verbose_name='Price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product')),
                ('product_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='product_groups.productgroup', verbose_name='Product Group')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priceproduct_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Price - Product',
                'verbose_name_plural': 'Price - Products',
                'ordering': ('pk',),
                'unique_together': {('price', 'product', 'live')},
            },
        ),
        migrations.CreateModel(
            name='SupportSaleOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supportsaleoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 14}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supportsaleoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Support Sale Optional',
                'verbose_name_plural': 'Support Sale Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='SimulationTestOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, verbose_name='Time Limit')),
                ('time_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=2, verbose_name='Time Limit Unit')),
                ('pause_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Pause Limit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulationtestoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 7}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulationtestoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Simulation Test Optional',
                'verbose_name_plural': 'Simulation Test Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.AddField(
            model_name='price',
            name='products',
            field=models.ManyToManyField(related_name='products', through='prices.PriceProduct', to='products.Product', verbose_name='Products'),
        ),
        migrations.AddField(
            model_name='price',
            name='reference_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Reference Product'),
        ),
        migrations.AddField(
            model_name='price',
            name='updated_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User'),
        ),
        migrations.CreateModel(
            name='PackagingOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Width')),
                ('width_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Width Unit')),
                ('length', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Length')),
                ('length_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Length Unit')),
                ('height', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Heigth')),
                ('height_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Height Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packagingoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 10}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packagingoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Packaging Optional',
                'verbose_name_plural': 'Packaging Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='GiftOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='giftoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 15}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='giftoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Gift Optional',
                'verbose_name_plural': 'Gift Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='FacebookPrivateGroupOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facebookprivategroupoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 13}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facebookprivategroupoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Facebook Private Group Optional',
                'verbose_name_plural': 'Facebook Private Group Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ExternalExamOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Time Limit')),
                ('time_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=2, verbose_name='Time Limit Unit')),
                ('pause_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Pause Limit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalexamoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 12}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalexamoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'External Exam Optional',
                'verbose_name_plural': 'External Exam Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='ExternalCourseOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalcourseoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 11}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='externalcourseoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'External Course Optional',
                'verbose_name_plural': 'External Course Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='EduGadgetOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadgetoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 5}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadgetoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'EduGadget Optional',
                'verbose_name_plural': 'EduGadget Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='EduGadgetBundleOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadgetbundleoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 6}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edugadgetbundleoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'EduGadget Bundle Optional',
                'verbose_name_plural': 'EduGadget Bundle Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='EDocumentOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edocumentoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 8}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edocumentoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'E-Document Optional',
                'verbose_name_plural': 'E-Document Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseServiceOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_limit', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Time Limit')),
                ('time_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=2, verbose_name='time Limit Unit')),
                ('pause_limit', models.PositiveIntegerField(default=0, verbose_name='Time Limit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseserviceoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 4}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseserviceoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Service Optional',
                'verbose_name_plural': 'Course Service Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 1}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Optional',
                'verbose_name_plural': 'Course Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseEduGadgetOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lifetime_limit', models.PositiveSmallIntegerField(default=0, verbose_name='Lifetime Limit')),
                ('lifetime_limit_unit', models.PositiveSmallIntegerField(choices=[(1, 'Second'), (2, 'Minute(s)'), (3, 'Hour'), (4, 'Day')], default=4, verbose_name='Lifetime Limit Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseedugadgetoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 9}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseedugadgetoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course EduGadget Optional',
                'verbose_name_plural': 'Course EduGadget Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseBundleOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=255, unique=True, verbose_name='ISBN')),
                ('number_of_page', models.PositiveSmallIntegerField(default=0, verbose_name='Number of Page')),
                ('width', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Width')),
                ('width_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Width Unit')),
                ('length', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Length')),
                ('length_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Length Unit')),
                ('height', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Height')),
                ('height_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Height Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebundleoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 2}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebundleoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Bundle Optional',
                'verbose_name_plural': 'Course Bundle Optionals',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='CourseBookOptional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=255, unique=True, verbose_name='ISBN')),
                ('number_of_page', models.PositiveSmallIntegerField(default=0, verbose_name='Number of Page')),
                ('width', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Width')),
                ('width_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Width Unit')),
                ('length', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Length')),
                ('length_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Length Unit')),
                ('height', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Height')),
                ('height_unit', models.PositiveSmallIntegerField(choices=[(1, 'Millimeter'), (2, 'Centimeter')], default=2, verbose_name='Height Unit')),
                ('live', livefield.fields.LiveField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('product_chain_type', models.PositiveSmallIntegerField(choices=[(1, 'Do nothing'), (2, 'Immediately'), (3, 'After primary product do not exist')], default=1, verbose_name='Product Chain Type')),
                ('created_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebookoptional_created_user', to=settings.AUTH_USER_MODEL, verbose_name='Created User')),
                ('price_product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='prices.priceproduct', verbose_name='Price Product')),
                ('product_chain', models.ForeignKey(limit_choices_to={'product_type': 3}, on_delete=django.db.models.deletion.DO_NOTHING, to='products.product', verbose_name='Product Chain')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursebookoptional_updated_user', to=settings.AUTH_USER_MODEL, verbose_name='Edited User')),
            ],
            options={
                'verbose_name': 'Course Book Optional',
                'verbose_name_plural': 'Course Book Optionals',
                'ordering': ('pk',),
            },
        ),
    ]
